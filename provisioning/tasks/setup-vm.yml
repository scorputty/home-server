---
# - name: install system updates for centos systems
#   yum: name=* state=latest update_cache=yes
#   when: ansible_distribution == "CentOS"

- name: create /etc/yum.repos.d/docker.repo
  template: src=templates/docker.repo.j2 dest=/etc/yum.repos.d/docker.repo

- name: install basic packages
  action: >
    {{ ansible_pkg_mgr }} name={{ item }} state=latest update_cache=yes
  with_items:
    - rsync
    - htop
    - vim
    - python-pip
    - docker-engine

# You can add users to the docker group to allow them to manage docker
# containers. This playbook uses sudo rather than the vagrant user because
# Ansible uses ControlPersist for SSH connections. The first time this playbook
# runs, the docker commands would fail if run by the vagrant user, since the
# persisted connection state isn't aware of the addition of the 'docker' group.
- name: add vagrant user to docker group
  user:
    name: vagrant
    groups: docker
    append: yes

- name: install PyYAML
  pip: name=PyYAML state=latest

- name: install docker-py
  pip:
    name: docker-py=={{ docker_py_version }} docker-compose=={{ dockercompose_py_version }}
    state: present

- name: install docker-compose
  pip:
    name: docker-compose
    state: latest

- name: create mountpoint "{{ nfs_mount_dir }}"
  action: file path="{{ nfs_mount_dir }}" state=directory

- name: create docker "{{ docker_data_dir }}" directory
  action: file path="{{ docker_data_dir }}" state=directory

- name: create docker "{{ docker_config_dir }}" directory
  action: file path="{{ docker_config_dir }}" state=directory

- name: start docker
  service: name=docker state=started enabled=yes
